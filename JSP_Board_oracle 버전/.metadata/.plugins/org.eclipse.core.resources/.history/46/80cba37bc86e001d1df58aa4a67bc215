package controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import service.BoardService;
import service.BoardServiceImpl;


@WebServlet("/brd/*")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;
    //로그기록 객체   
	private static final Logger log = LoggerFactory.getLogger(BoardController.class);
	//controller -> service , service -> dao
	private BoardService bsv; //아직 미구현 (service : interface 생성)
	private String destPage; //목적지 위치 기록
	private RequestDispatcher rdp; //jsp에서 받은 요청을 처리, 결과를 다른 jsp로 보내는 역할을 하는 객체
	private int isOk; //구문 체크 값
    
    public BoardController() {
        bsv = new BoardServiceImpl(); // bsv를 구현할 객체 생성 (service : class 생성)
    }

	
	protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		req.setCharacterEncoding("utf-8");
		res.setCharacterEncoding("utf-8");
		res.setContentType("text/html; charset=UTF-8");
		
		String uri = req.getRequestURI(); //jsp에서 오는 요청 주소
		log.info("uri >> "+uri);
		String path = uri.substring(uri.lastIndexOf("/")+1);
		log.info("path >> "+path);
		
		switch(path) {
		case "register":
			//글쓰기 페이지로 이동해서 페이지를 출력
			destPage="/board/register.jsp";
			System.out.println(">>path : " + path);
			log.info("path>> "+path);
			break;
		case "insert":
			try {
				//등록한 후 => list.jsp로 이동
				String title = req.getParameter("title");
				String writer = req.getParameter("writer");
				String content = req.getParameter("content");
				log.info("insert check 1");
				isOk = bsv.register(new BoardVO(title, writer, content));
				log.info(isOk>0?"OK":"Fail");
				
				// list에서 db에서 변경된 데이터들을 가져와서 처리한 후 list.jsp에 뿌리고 이동
				destPage = "list";
			} catch (Exception e) {
				log.info("insert error");
				e.printStackTrace();
			}
			break;
			
		case "list":
			try {
				log.info("list check 1");
				List<BoardVO> list = bsv.getList(); 
				log.info("list check 4");
				req.setAttribute("list", list);
				destPage = "/board/list.jsp";
				
			} catch (Exception e) {
				log.info("list error");
				e.printStackTrace();
			}
			break;
			
		case "pageList":
			try {
				int pageNum = Integer.parseInt(req.getParameter("pageNum"));
			} catch (Exception e) {
				// TODO: handle exception
			}
			break;
			
		case "detail":
			try {
				//jsp에서 보낸 bno 받기
				int bno = Integer.parseInt(req.getParameter("bno"));
				log.info("detail check 1");
				BoardVO bvo = bsv.getDetail(bno);
				log.info("detail check 4");
				req.setAttribute("bvo", bvo);
				destPage="/board/detail.jsp";
			} catch (Exception e) {
				log.info("detail error");
				e.printStackTrace();
			}
			break;
			
		case "modify":
			try {
				int bno = Integer.parseInt(req.getParameter("bno"));
				BoardVO bvo = bsv.getDetail(bno);
				req.setAttribute("bvo", bvo);
				destPage="/board/modify.jsp";
			} catch (Exception e) {
				log.info("modify error");
				e.printStackTrace();
			}
			break;
			
		case "update":
			try {
				int bno = Integer.parseInt(req.getParameter("bno"));
				String title = req.getParameter("title");
				String content = req.getParameter("content");
				BoardVO bvo = new BoardVO(bno, title, content);
				isOk = bsv.modify(bvo);
				log.info("update: "+(isOk>0?"OK":"Fail"));
				destPage="list";	
			} catch (Exception e) {
				// TODO: handle exception
			}
			break;
			
		case "remove":
			try {
				int bno = Integer.parseInt(req.getParameter("bno"));
				isOk = bsv.remove(bno);
				log.info("delete: "+(isOk>0?"OK":"Fail"));
				destPage="list";
			} catch (Exception e) {
				// TODO: handle exception
			}
			break;
		}
		
		
		
		//목적지 경로로 응답함.(전달)
		rdp = req.getRequestDispatcher(destPage);
		rdp.forward(req, res);
		
	}

	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}
