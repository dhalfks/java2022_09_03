package controller;

import java.io.BufferedReader;
import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.CommentVO;
import service.CommentService;
import service.CommentServiceImpl;

@WebServlet("/cmt/*")
public class CommentController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static Logger log = LoggerFactory.getLogger(CommentController.class);
    private CommentService csv;
    private int isOk;
	
	
    public CommentController() {
        csv = new CommentServiceImpl();
    }

	protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		req.setCharacterEncoding("utf-8");
		res.setCharacterEncoding("utf-8");
		
		String uri = req.getRequestURI(); // /cmt/list/10, /cmt/post, /cmt/modify
		String pathUri = uri.substring("/cmt/".length()); // post
		String path=pathUri;
		String pathVar="";
		if(pathUri.contains("/")) {
			 path = pathUri.substring(0, pathUri.lastIndexOf("/")); //list
			 pathVar = pathUri.substring(pathUri.lastIndexOf("/")+1); //10	
		}
		
		log.info(">>> uri >> "+uri);
		log.info(">>> pathUri >> "+pathUri);
		log.info(">>> path >> "+path);
		log.info(">>> pathVar >> "+pathVar);
		
		switch(path) {
		case "post":
			try {
				//js에서 보낸 데이터를 StringBuffer로 읽어들이는 작업.
				StringBuffer sb = new StringBuffer();
				String line=null;
				BufferedReader br = req.getReader(); //댓글 객체
				while((line = br.readLine())!=null) { //값이 널이 아니라면 (값이 남아있다면)
					sb.append(line);
				}
				log.info(">>> sb : "+ sb.toString()); 
				//객체로 생성
				JSONParser parser = new JSONParser();
				JSONObject jsonObj = (JSONObject)parser.parse(sb.toString());
				
				int bno = Integer.parseInt(jsonObj.get("bno").toString());
				String writer = jsonObj.get("writer").toString();
				String content = jsonObj.get("content").toString();
				isOk = csv.post(new CommentVO(bno, writer, content));
				
			} catch (Exception e) {
				// TODO: handle exception
			}
			break;
		}
		
		
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}
