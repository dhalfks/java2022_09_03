package controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import service.BoardService;
import service.BoardServiceImpl;

@WebServlet("/brd/*")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final Logger log = LoggerFactory.getLogger(BoardController.class);
	private BoardService bsv;
	private RequestDispatcher rdp;
	private String destPage;
	private int isOk;
       
    public BoardController() {
        bsv = new BoardServiceImpl(); 
    }

	protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		req.setCharacterEncoding("utf-8");
		res.setCharacterEncoding("utf-8");
		res.setContentType("text/html; charset=UTF-8");
		
		String uri = req.getRequestURI();
		String path = uri.substring(uri.lastIndexOf("/")+1);
		
		switch(path) {
		case "register":
			destPage = "/board/register.jsp";
			break;
		case "insert":
			try {
				String title = req.getParameter("title");
				String writer = req.getParameter("writer");
				String content = req.getParameter("content");
				BoardVO bvo = new BoardVO(title, writer, content);
				isOk = bsv.register(bvo);
				destPage="list";
						
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		case "list":
			try {
				List<BoardVO> list = bsv.getList();
				req.setAttribute("list", list);
				
				destPage = "/board/list.jsp";
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		case "modify":
			try {
				List<BoardVO> list = bsv.getList();
				req.setAttribute("list", list);
				
				destPage = "/board/modify.jsp";
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		case "update":
			try {
				int bno = Integer.parseInt(req.getParameter("bno"));
				isOk = bsv.modify(bno);
				destPage = "list";
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		case "remove":
			try {
				int bno = Integer.parseInt(req.getParameter("bno"));
				isOk = bsv.remove(bno);
				destPage = "list";
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		}
		rdp = req.getRequestDispatcher(destPage);
		rdp.forward(req, res);
	
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}
